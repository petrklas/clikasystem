// Global styling for this template
body {
  font-family: $font-family;
  font-weight: 500;
  overflow-x: hidden;
  color: $color-black; 
}

p {
  font-size: 20px;
}

p.small {
  font-size: 16px;
}
a,
a.active,
a:active,
a:focus,
a:hover {
  color: $theme-secondary;
  outline: none;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-family;
  font-weight: $font-weight;
  text-transform: uppercase;
}

hr.star-light,
hr.star-primary {
  max-width: 250px;
  margin: 25px auto 30px;
  padding: 0;
  text-align: center;
  border: none;
  border-top: solid 5px;
}
hr.star-light:after,
hr.star-primary:after {
  font-family: FontAwesome;
  font-size: 2em;
  position: relative;
  top: -.8em;
  display: inline-block;
  padding: 0 0.25em;
  content: '\f005';
}

hr.star-light {
  border-color: white;
}
hr.star-light:after {
  color: white;
  background-color: $theme-secondary;
}

hr.star-primary {
  border-color: $theme-primary;
}
hr.star-primary:after {
  color: $theme-primary;
  background-color: white;
}

.img-centered {
  margin: 0 auto;
}

section {
  padding: 50px 0;
  width: 100%;
  
  h2 {
    font-size: 3em;
    margin: 0;
  }
}

section.success {
  color: white;
  background: $theme-secondary;
}
@media(max-width:767px) {
  section {
    padding: 75px 0;
  }
  section.first {
    padding-top: 75px;
  }
}

.scroll-top {
  position: fixed;
  z-index: 1049;
  right: 2%;
  bottom: 2%;
  width: 50px;
  height: 50px;
  .btn {
    font-size: 16px;
    line-height: 28px;
    width: 50px;
    height: 50px;
    text-align: center;
    border-radius: 100%;
    &:focus {
      outline: none;
    }
  }
}

// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}
